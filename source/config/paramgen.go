// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package config

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigBatchSize       = "batchSize"
	ConfigDsn             = "dsn"
	ConfigOrderingColumns = "orderingColumns"
	ConfigSnapshot        = "snapshot"
	ConfigTables          = "tables"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigBatchSize: {
			Default:     "1000",
			Description: "BatchSize is a size of rows batch.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: 0},
				config.ValidationLessThan{V: 100001},
			},
		},
		ConfigDsn: {
			Default:     "",
			Description: "DSN is the configuration of the data source name to connect to the Amazon Redshift.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigOrderingColumns: {
			Default:     "",
			Description: "OrderingColumns is a list of corresponding ordering columns for the table\nthat the connector will use for ordering rows.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigSnapshot: {
			Default:     "true",
			Description: "Snapshot is the configuration that determines whether the connector\nwill take a snapshot of the entire table before starting cdc mode.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		ConfigTables: {
			Default:     "",
			Description: "Tables is a list of table names to pull data from.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
